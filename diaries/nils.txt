19/2 15:30 - 19:00
Startup meeting. Brainstorming project ideas. Picking most interesting topic that also seems suitable for a functional language. Dicided upon path finding. Discussed some ideas for how it should be implemeted, what the software should do and not do. Created git repo and readme with the rough plan for our project



20/2 14:00 - 16:00
Looked at what the other members had coded the previous day to get up to date. Created datatype for our grid node using references. Even though we're not allowed to use them we want to elaborate with it to get experience with using it as well as a functional datatype (Babak is looking into that).

23/2 17:00 - 20:00
Trying to figure out a good algorithm for createing a node-graph from our grid where each node contains the coordinates to the nodes that it connects to. But without luck

24/2 10:00 - 13:00
Came up with an algorithm that works to build the node-graph. It should be fairly efficient but the code isn't very clean. At least we can start working on the actual path-finding now

14:45 - 22:30
Meeting with Peter. Got the go ahead on the project but also to use arrays for building and storing the node-graph. Each one of us re-wrote preprocess and the nodegraph-creation functions to use arrays instead of lists, which made the code alot more readable and will be faster when we do the path finding. Started reading up on A* algorithm.

25/2 11:30 - 21:00
More research on A* and the different options for priority queues. Found that binary heap seems to be the most common method when using arrays but binomial tree for the lecture should also work.

26/2 11:00 - 16:00
For binomial tree to work with a* we need a method to update the priority of an item in the queue and bubble it up the heap if it gets a lower priority than its parent. Wrote this method today.

27/2 14:30 - 16:30
Restructuring of code

18:00 - 23:45
Implemented pqueue with Babaks a*, spent a lot of time fighting with a bug which didn't give the shortest route. Eventually found out what was causing it.

28/2 14:00 - 16:30
Meeting with team to go through want we want to add/fix

1/3 10:30 - 13:30
Created prioqueue using lists. Created a signature for pqueue that both the binomialheap and the list could use.

2/3 
17:00 - 23:00 
Started writing function specifications for pqueue. Found that the update function for binomial heap could be optimized and re-written. Started doing that. Also made some timers for demo.sml to test execution speed, need larger dataset.

3/3 09:00 - 14:00
Finished with function specifications and re-wrote update-function which should now be more optimized and stop searching once it finds the node to update. Remowed signature for pqueue because sml doesn't seem to have a way to bind a structure so I can't easily use the list implementation instead of the binoheap. Moved them into seperate files instead, we can now switch between list och binoheap for pqueue by including the desired file in pathfinder.sml